@PACKAGE_INIT@

# Find dependencies and stop package config if required ones are not found
include(CMakeFindDependencyMacro)

set(@PROJECT_NAME@_PREFIX @CMAKE_CURRENT_LIST_DIR@)
set(@PROJECT_NAME@_MODULE_PATH @CMAKE_CURRENT_LIST_DIR@/cmake/modules)
set(@PROJECT_NAME@_SCRIPT_DIR @CMAKE_CURRENT_LIST_DIR@/cmake/scripts)
set(@PROJECT_NAME@_PKG_PATH @CMAKE_CURRENT_LIST_DIR@/cmake/pkg)
#set_and_check(DOXYSTYLE_FILE "@DOXYSTYLE_DIR@/Doxystyle")
#set_and_check(DOXYGENMACROS_FILE "@DOXYSTYLE_DIR@/doxygen-macros")
set(@PROJECT_NAME@_LIBRARIES Dune::@PROJECT_NAME@)

list(APPEND CMAKE_MODULE_PATH "@CMAKE_MODULE_PATH@;@CMAKE_CURRENT_LIST_DIR@/cmake/modules")

if(@GMP_FOUND@)
  find_dependency(GMP)
  set(HAVE_GMP ${GMP_FOUND})
endif()

if(@LAPACK_FOUND@)
  find_dependency(LAPACK)
  set(HAVE_BLAS ${BLAS_FOUND})
  set(HAVE_LAPACK ${LAPACK_FOUND})
  set(LAPACK_NEEDS_UNDERLINE @LAPACK_NEEDS_UNDERLINE@)
endif()

if(@MPI_FOUND@)
  find_dependency(MPI)
  set(HAVE_MPI ${MPI_FOUND})
endif()

set(HAVE_SYS_MMAN_H @HAVE_SYS_MMAN_H@)
set(HAVE_MPROTECT @HAVE_MPROTECT@)

if(@QuadMath_FOUND@)
  set(QuadMath_COMPILES @QuadMath_COMPILES@)
  find_dependency(QuadMath)
  set(HAVE_QUADMATH ${QuadMath_FOUND})
endif()

if(@Vc_FOUND@)
  find_dependency(Vc @MINIMUM_VC_VERSION@ NO_MODULE)
  set(HAVE_VC ${Vc_FOUND})
endif()

# include the configuration of exported targets
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")

# Finish package configuration:
# checks whether all requested, non-optional components have been found,
# and if this is not the case, sets the @PROJECT_NAME@_FOUND variable to FALSE
check_required_components("@PROJECT_NAME@")
