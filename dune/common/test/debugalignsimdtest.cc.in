// @GENERATED_SOURCE@

#include <config.h>

#include <cstdlib>
#include <type_traits>

#include <dune/common/debugalign.hh>
#include <dune/common/parallel/mpihelper.hh>
#include <dune/common/simd/test.hh>
#include <dune/common/test/debugalignsimdtest.hh>

template<class> struct RebindAccept : std::false_type {};
#cmake @template@
template<>
struct RebindAccept<Dune::AlignedNumber<@SCALAR@> > : std::true_type {};
#cmake @endtemplate@

int main(int argc, char **argv)
{
  Dune::MPIHelper::instance(argc, argv);

  Dune::Simd::UnitTest test;

  using Rebinds = Dune::Simd::RebindList<
#cmake @template@
    @SCALAR@,
#cmake @endtemplate@
    Dune::Simd::EndMark>;

#cmake @template@
  test.check<Dune::AlignedNumber<@SCALAR@>,
             Rebinds, Dune::Std::to_false_type, RebindAccept>();
#cmake @endtemplate@

  return test.good() ? EXIT_SUCCESS : EXIT_FAILURE;
}
