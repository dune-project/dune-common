// -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
// vi: set et ts=4 sw=2 sts=2:

#ifndef DUNE_COMMON_KERNEL_INSTANTIATION_HH
#define DUNE_COMMON_KERNEL_INSTANTIATION_HH

#if defined DUNE_KERNEL_GENERATE_DEFINITIONS
#define DUNE_KERNEL_EXTERN
#else
#define DUNE_KERNEL_EXTERN extern
#endif

#define DUNE_KERNEL_EXPAND_VA_ARGS(...) __VA_ARGS__
#define DUNE_KERNEL_ARGS(...) (__VA_ARGS__)
#define DUNE_KERNEL_DECLARATION_WRAPPER(DECLARATION,...)        \
  DUNE_KERNEL_EXTERN DECLARATION(__VA_ARGS__)

#define DUNE_KERNEL_DECLARE(DECLARATION,ARGS,...)                       \
  DUNE_KERNEL_DECLARATION_WRAPPER(DECLARATION,DUNE_KERNEL_EXPAND_VA_ARGS ARGS,__VA_ARGS__)

#define DUNE_KERNEL_MINALIGN_INSTANTIATIONS_BLOCKED(DECLARATION,ARGS,min_align) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align, 1)                            \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align, 2)                            \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align, 4)                            \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align, 8)                            \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align,16)                            \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align,32)

#define DUNE_KERNEL_MINALIGN_INSTANTIATIONS_SCALAR(DECLARATION,ARGS,min_align) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,min_align)

#if defined TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT
#define DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_BLOCKED(DECLARATION,ARGS)   \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT, 1) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT, 2) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT, 4) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT, 8) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT,16) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT,32)

#define DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_SCALAR(DECLARATION,ARGS) \
  DUNE_KERNEL_DECLARE(DECLARATION,ARGS,TBB_CACHE_ALIGNED_ALLOCATOR_ALIGNMENT)

#else
#define DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_BLOCKED(DECLARATION,ARGS)
#define DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_SCALAR(DECLARATION,ARGS)
#endif

//! main instantiation macro for blocked kernels
#define DUNE_KERNEL_INSTANTIATE_BLOCKED(DECLARATION,ARGS,min_align)       \
  DUNE_KERNEL_MINALIGN_INSTANTIATIONS_BLOCKED(DECLARATION,ARGS,min_align) \
  DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_BLOCKED(DECLARATION,ARGS)

//! main instantiation macro for scalar kernels
#define DUNE_KERNEL_INSTANTIATE_SCALAR(DECLARATION,ARGS,min_align)        \
  DUNE_KERNEL_MINALIGN_INSTANTIATIONS_SCALAR(DECLARATION,ARGS,min_align)  \
  DUNE_KERNEL_TBB_CACHE_ALIGNED_INSTANTIATIONS_SCALAR(DECLARATION,ARGS)

#endif // DUNE_COMMON_KERNEL_INSTANTIATION_HH
